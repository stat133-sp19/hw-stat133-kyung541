nba$salary2 = nba$salary * 0.000001
hist(nba$salary2)
nba$salary2
nba$salary
read.csv(datafile, header = FALSE, nrows = 10)
datafile1 = read.csv(datafile, header = FALSE, nrows = 10)
read.csv(datafile, header = FALSE, nrows = 10)
read.table(datafile, nrow=10)
identical(nba,nba2)
nba = read.csv(datafile)
str(nba, vec.len = 1)
nba2 = read.table(datafile, sep = ",", col.names = col_names, colClasses = data_types, skip = 1)
str(nba, vec.len = 1)
identical(nba,nba2)
hist(nba$salary)
nba$salary2 = nba$salary * 0.000001
nba$salary2
hist(nba$salary2)
hist(nba$salary2)
salary2log = log(nba$salary2)
hist(nba$salary2)
low = salary2log[salary2log < -3]
str(low)
length(low)
lowtable = nba[nba$salary2log <= max(low), c("player", "weight", "height", "team", "position")]
nba = nba[nba$salary2log > max(low), ]
summary(nba$points2)
hist(nba$points2)
nba$points2
nba$points2
nba$salary2 = nba$salary * 0.000001
nba$salary2
hist(nba$salary)
nba2 = read.table(datafile, sep = ",", col.names = col_names, colClasses = data_types, skip = 1)
str(nba, vec.len = 1)
identical(nba,nba2)
nba = read.csv(datafile)
str(nba, vec.len = 1)
summary(nba$salary)
summary(nba$salary)
hist(nba$salary)
summary(nba$salary)
hist(nba$salary)
nba$salary2 = nba$salary * 0.000001
hist(nba$salary2)
salary2log = log(nba$salary2)
summary(nba$salary)
hist(nba$salary)
nba$salary2 = nba$salary * 0.000001
hist(nba$salary2)
salary2log = log(nba$salary2)
hist(nba$salary2)
low = salary2log[salary2log < -3]
str(low)
length(low)
lowtable = nba[nba$salary2log <= max(low), c("player", "weight", "height", "team", "position")]
nba = nba[nba$salary2log > max(low), ]
nba$points2
View(nba)
View(nba)
View(lowtable)
View(lowtable)
data_types = c(factor = character, factor = factor, factor = factor, factor = integer, factor = integer, factor = integer, factor = integer, factor = character, factor = integer, factor = integer, factor = integer, factor = integer, factor = integer, factor = integer, factor = integer)
nba = read.csv(datafile)
str(nba, vec.len = 1)
col_names = c("player","team","position","height","weight","age","experience","college","salary","games","minutes","points","points3","points2","points1")
nba2 = read.table(datafile, sep = ",", col.names = col_names, colClasses = data_types, skip = 1)
str(nba, vec.len = 1)
identical(nba,nba2)
nba3 = as.matrix(nba)
str(nba3)
summary(nba$points2)
hist(nba$points2)
nba[nba$points2== 0, 14] = 0.1
logpt2 = log(nba$points2)
hist(logpt2)
boxplot(salary2 ~ age, data = nba,
xlab = "Age", ylab = "Salary (in millions)")
nba$salary2 = nba$salary * 0.000001
hist(nba$salary)
nba$salary2
salary2
boxplot(salary2 ~ age, data = nba
```{r}
boxplot(salary2 ~ age, data = nba,
xlab = "Age", ylab = "Salary (in millions)")
boxplot(points ~ age, data = nba,
xlab = "Age", ylab = "Points")
nba$age2 = nba$age
nba[nba$age2 <= 19,17] = 20
age2ct = cut(nba$age2, breaks = c(19,24,29, Inf), labels = c("20-24", "25-29", "30+"))
nba$age2 = age2ct
summary(nba$age2)
plot(salary2 ~ points, data = nba, log = "xy", main = "", xlab = "Points (log scale)", ylab = "Salary (log $)", col = c("#D4D62A", "#4F9D66", "#9575AB"), pch = 19, cex = 0.6)
plot(salary2 ~ points, data = nba, log = "xy", main = "", xlab = "Points (log scale)", ylab = "Salary (log $)", col = c("#D4D62A", "#4F9D66", "#9575AB"), pch = 19, cex = 0.6)
legend("bottomright", fill = palette1, legend = levels(nba$age2),
title = "Age Groups", cex = 0.8)
palette1 = c( "#D4D62A" , "#4F9D66" ,  "#9575AB" )
plot(salary2 ~ points, data = nba, log = "xy", main = "", xlab = "Points (log scale)", ylab = "Salary (log $)", col = c("#D4D62A", "#4F9D66", "#9575AB"), pch = 19, cex = 0.6)
legend("bottomright", fill = palette1, legend = levels(nba$age2),
title = "Age Groups", cex = 0.8)
boxplot(salary2)
boxplot(nba$salary2)
boxplot(nba$salary2 ~ nba$position)
boxplot(nba$salary2 ~ nba$age)
boxplot(nba$salary2 ~ nba$position)
boxplot(nba$points ~ nba$position)
position
nba$position
nba$position[1]
nba$position[2]
col(nba$position[1] ) = "#66c2a5"
nba$position[1]= col("#66c2a5")
pos_colors = c("#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854")
plot(salary2 ~ position, data = nba, log = "xy", main = "", xlab = "Position (log scale)", ylab = "Salary (log $)", col = c("#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854"), pch = 19, cex = 0.6)
legend("bottomright", fill = pos_colors, legend = levels(nba$position),
title = "Position", cex = 0.8)
boxplot(salary2 ~ position, data = nba, log = "xy", main = "", xlab = "Position (log scale)", ylab = "Salary (log $)", col = c("#66c2a5", "#fc8d62", "#8da0cb", "#e78ac3", "#a6d854"), pch = 19, cex = 0.6)
legend("bottomright", fill = pos_colors, legend = levels(nba$position),
title = "Position", cex = 0.8)
```{r}
nba$points2
hist(nba$points2)
hist(nba$points2, breaks = "")
hist(nba$points2, breaks = "")
hist(nba$points2)
hist(nba$points2, breaks = 1)
hist(nba$points2, breaks = 5)
hist(nba$points2, breaks = 10)
hist(nba$points2)
summary(nba$points2)
hist(nba$points2, breaks = 10)
hist(nba$points2, breaks = 10)
summary(nba$points2)
hist(nba$points2, breaks = 10)
nba[nba$points2== 0, 14] = 0.1
logpt2 = log(nba$points2)
hist(logpt2)
nba$points2
nba[nba$points2== 0, 14] = 0.1
nba$points2
nba[nba$age2 <= 19,17] = 20
knitr::opts_chunk$set(echo = TRUE)
# My current directory
pwd
knitr::opts_chunk$set(echo = FALSE)
# My current directory
pwd
knitr::opts_chunk$set(echo = FALSE)
# My current directory
pwd()
knitr::opts_chunk$set(echo = TRUE)
# My current directory
pwd
# My current directory
pwd
```{r eval = FALSE}
pwd()
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
pwd()
pwd()
?man
??man
# print working directory
pwd
# print working directory
pwd
curl -O http://archive.ics.uci.edu/ml/machine-learning-databases/forest-fires/forestfires.csv
length(twopt$Name)
knitr::opts_chunk$set(echo = TRUE)
curl -O https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/andre-iguodala.csv
setwd("~/Desktop/UC Berkeley/Stat133/workout01")
curry <- read.csv("~/Desktop/UC Berkeley/Stat133/workout01/data/stephen-curry.csv", stringsAsFactors = FALSE)
klay = read.csv("~/Desktop/UC Berkeley/Stat133/workout01/data/klay-thompson.csv", stringsAsFactors = FALSE)
kevin = read.csv("~/Desktop/UC Berkeley/Stat133/workout01/data/kevin-durant.csv", stringsAsFactors = FALSE)
graymand = read.csv("~/Desktop/UC Berkeley/Stat133/workout01/data/draymond-green.csv", stringsAsFactors = FALSE)
iguodala = read.csv("~/Desktop/UC Berkeley/Stat133/workout01/data/andre-iguodala.csv", stringsAsFactors = FALSE)
curry = mutate(curry, "Name" = "Stephen Curry")
klay = mutate(klay, "Name" = "Klay Thompson")
kevin = mutate(kevin, "Name" = "Kevin Durant")
graymand = mutate(graymand, "Name" = "Draymand Green")
iguodala = mutate(iguodala, "Name" = "Andre Iguodala")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("base64enc", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library("readr", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
curry = mutate(curry, "Name" = "Stephen Curry")
klay = mutate(klay, "Name" = "Klay Thompson")
kevin = mutate(kevin, "Name" = "Kevin Durant")
graymand = mutate(graymand, "Name" = "Draymand Green")
iguodala = mutate(iguodala, "Name" = "Andre Iguodala")
curry$shot_made_flag[curry$shot_made_flag == "n"] = "Shot_no"
curry$shot_made_flag[curry$shot_made_flag == "y"] = "Shot_yes"
klay$shot_made_flag[klay$shot_made_flag == "n"] = "Shot_no"
klay$shot_made_flag[klay$shot_made_flag == "y"] = "Shot_yes"
kevin$shot_made_flag[kevin$shot_made_flag == "n"] = "Shot_no"
kevin$shot_made_flag[kevin$shot_made_flag == "y"] = "Shot_yes"
graymand$shot_made_flag[graymand$shot_made_flag == "n"] = "Shot_no"
graymand$shot_made_flag[graymand$shot_made_flag == "y"] = "Shot_yes"
iguodala$shot_made_flag[iguodala$shot_made_flag == "n"] = "Shot_no"
iguodala$shot_made_flag[iguodala$shot_made_flag == "y"] = "Shot_yes"
curry = mutate(curry, "minutes" = curry$period *12 - curry$minutes_remaining)
klay = mutate(klay, "minutes" = klay$period *12 - klay$minutes_remaining)
kevin = mutate(kevin, "minutes" = kevin$period *12 - kevin$minutes_remaining)
graymand = mutate(graymand, "minutes" = graymand$period *12 - graymand$minutes_remaining)
iguodala = mutate(iguodala, "minutes" = iguodala$period *12 - iguodala$minutes_remaining)
sink("../output/stephen-curry-summary.txt", append = FALSE, "output")
for (i in summary(curry)) print(i)
sink()
sink("../output/Klay-Thompson-summary.txt", append = FALSE, "output")
for (i1 in summary(klay)) print(i1)
sink()
sink("../output/Kevin-Durant-summary.txt", append = FALSE, "output")
for (i2 in summary(kevin)) print(i2)
sink()
sink("../output/Graymand-Green-summary.txt", append = FALSE, "output")
for (i3 in summary(graymand)) print(i3)
sink()
sink("../output/Andre-Iguodala-summary.txt", append = FALSE, "output")
for (i4 in summary(iguodala)) print(i4)
sink()
shots_data = rbind(curry, klay, graymand, kevin, iguodala)
write.csv(shots_data, "../Data/shots-data.csv")
sink("../output/shots-data-summary.txt", append = FALSE, "output")
for (i5 in summary(shots_data)) print(i5)
sink()
dat = read.csv("../data/shots-data.csv", header = TRUE)
dat$made = ifelse(dat$shot_made_flag == "Shot_yes", 1, 0)
dat$taken = ifelse(dat$shot_made_flag == "Shot_yes", 1, 1)
pt2 = filter(dat, shot_type == "2PT Field Goal")
group_by(pt2, Name)
class(pt$Name)
class(pt2$Name)
as.character(pt2$Name)
group_by(pt2, Name)
group_by(Name, pt2)
group_by(pt2$Name, pt2)
pt2 = filter(dat, shot_type == "2PT Field Goal")
group_by(pt2$Name, pt2)
summarise(group_by(pt2,Name),"total"=sum(pt2$taken),"made" =sum(pt2$made))
rawpt2 = filter(dat, shot_type == "2PT Field Goal")
pt2summarise(group_by(rawpt2,Name),"total"=sum(rrawpt2$taken),"made" =sum(rawpt2$made))
pt2 = summarise(group_by(rawpt2,Name),"total"=sum(rrawpt2$taken),"made" =sum(rawpt2$made))
pt2 = summarise(group_by(rawpt2,Name),"total"=sum(rawpt2$taken),"made" =sum(rawpt2$made))
pt2$perc_made = (pt2$made/pt2$taken)*100
(pt2$made/pt2$taken)*100
pt2$perc_made = ("made"/"taken")*100
pt2$perc_made = ("made"/"taken")*100
"made"/"taken"
pt2$perc_made = (made/taken)*100
pt2$perc_made = (rawpt2$made/rawpt2$taken)*100
pt2 = summarise(group_by(rawpt2,Name),"total"=sum(rawpt2$taken),"made" =sum(rawpt2$made), perc_made = (rawpt2$made/rawpt2$taken)*100)
pt2 = summarise(group_by(rawpt2,Name),"total"=sum(rawpt2$taken),"made" =sum(rawpt2$made), "perc_made" = (rawpt2$made/rawpt2$taken)*100)
pt2 = summarise(group_by(rawpt2,Name),"total"=sum(rawpt2$taken),"made" =sum(rawpt2$made), "perc_made" = (pt2$made/pt2$total$taken)*100)
pt2 = summarise(group_by(rawpt2,Name),"total"=sum(rawpt2$taken),"made" =sum(rawpt2$made), "perc_made" = (pt2$made/pt2$total)*100)
View(pt2)
View(rawpt2)
pt2 = summarise(group_by(rawpt2,Name),"total"=sum(rawpt2$taken),"made" =sum(rawpt2$made))
pt2$perc_made = (pt2$made/pt2$total)*100)
pt2$perc_made = (pt2$made/pt2$total)*100
View(pt2)
View(rawpt2)
View(pt2)
group_by(rawpt2$Name, pt2)
group_by(rawpt2, Name)
pt2 = summarise(group_by(rawpt2,Name),"total"=sum(rawpt2$taken),"made" =sum(rawpt2$made))
View(dat)
pt2_name = group_by(rawpt2, Name)
pt2 = summarise(group_by(pt2_name,Name),"total"=sum(pt2_name$taken),"made" =sum(pt2_name$made))
pt2_name = group_by(rawpt2, Name)
pt2 = summarise(group_by(pt2_name,Name),"total"=sum(pt2_name$taken),"made" =sum(pt2_name$made))
View(pt2_name)
pt2$perc_made = (pt2$made/pt2$total)*100
pt2 = arrange(desc(pt2$perc_made))
pt2 = arrange(pt2, desc(pt2$perc_made))
View(pt2)
# 3 pt table
pt3_name = group_by(rawpt2, Name)
pt3 = summarise(group_by(pt3_name,Name),"total"=sum(pt3_name$taken),"made" =sum(pt3_name$made))
pt2$perc_made = (pt3$made/pt3$total)*100
pt2 = arrange(pt3, desc(pt3$perc_made))
pt2$perc_made = (pt3$made/pt3$total)*100
pt3$perc_made = (pt3$made/pt3$total)*100
pt2 = arrange(pt3, desc(pt3$perc_made))
pt2_name = group_by(rawpt2, Name)
pt2 = summarise(group_by(pt2_name,Name),"total"=sum(pt2_name$taken),"made" =sum(pt2_name$made))
pt2$perc_made = (pt2$made/pt2$total)*100
pt2 = arrange(pt2, desc(pt2$perc_made))
View(pt3)
View(pt2)
# 3 pt table
rawpt3 = filter(dat, dat$shot_type == "3 PT Field Goal")
pt3_name = group_by(rawpt3, Name)
pt3 = summarise(group_by(pt3_name,Name),"total"=sum(pt3_name$taken),"made" =sum(pt3_name$made))
pt3$perc_made = (pt3$made/pt3$total)*100
pt3 = arrange(pt3, desc(pt3$perc_made))
View(pt3)
View(rawpt3)
# 3 pt table
rawpt3 = filter(dat, shot_type == "3 PT Field Goal")
# 3 pt table
rawpt3 = filter(dat, shot_type == "3PT Field Goal")
pt3_name = group_by(rawpt3, Name)
pt3 = summarise(group_by(pt3_name,Name),"total"=sum(pt3_name$taken),"made" =sum(pt3_name$made))
pt3$perc_made = (pt3$made/pt3$total)*100
pt3 = arrange(pt3, desc(pt3$perc_made))
View(pt3)
pta = summarise(group_by(dat,Name),"total"=sum(dat$taken),"made" =sum(dat$made))
pta$perc_made = (pta$made/pta$total)*100
pta = arrange(pta, desc(pta$perc_made))
View(pta)
View(pta)
View(pt3)
View(pt2)
View(dat)
View(pt2_name)
View(rawpt2)
pt2 = summarise(group_by(rawpt2,Name),"total"=sum(rawpt2$taken),"made" =sum(rawpt2$made))
pt2$perc_made = (pt2$made/pt2$total)*100
pt2 = arrange(pt2, desc(pt2$perc_made))
View(pt2)
summary(group_by(rawpt2, Name))
# 2pt table
pt2_name = sum(group_by(rawpt2, Name), rawpt2$made, rawpt2$taken)
)
# 2pt table
pt2_name = sum(group_by(rawpt2, Name)
View(pt2_name)
View(pt2_name)
pt2 = summarize(group_by(rawpt2,Name), "total"=sum(rawpt2$taken), "made" =sum(rawpt2$made))
View(pt2)
# 2pt table
pt2_name = summarise(rawpt2)
View(pt2_name)
# 2pt table
pt2_name = summarise(rawpt2, name )
pt2_name = summarise(group_by(rawpt2, Name))
View(pt2_name)
# 2pt table
pt2_name = summarise(group_by(rawpt2, Name), "Total" = dat$made)
# 2pt table
pt2_name = summarise(group_by(rawpt2, Name)
pt2$perc_made = (pt2$made/pt2$total)*100
pt2 = summarise(group_by(rawpt2,Name), "total"=sum(rawpt2$taken), "made" =sum(rawpt2$made))
pt2$perc_made = (pt2$made/pt2$total)*100
pt2 = arrange(pt2, desc(pt2$perc_made))
# 3 pt table
rawpt3 = filter(dat, shot_type == "3PT Field Goal")
pt3_name = group_by(rawpt3, Name)
pt3 = summarise(group_by(pt3_name,Name),"total"=sum(pt3_name$taken),"made" =sum(pt3_name$made))
pt3$perc_made = (pt3$made/pt3$total)*100
pt3 = arrange(pt3, desc(pt3$perc_made))
pta = summarise(group_by(dat,Name),"total"=sum(dat$taken),"made" =sum(dat$made))
pta$perc_made = (pta$made/pta$total)*100
pta = arrange(pta, desc(pta$perc_made))
rawpt2 = filter(dat, dat$shot_type == "2PT Field Goal")
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
setwd("~/Desktop/UC Berkeley/Stat133/workout01")
dat = read.csv("/data/shots-data.csv", header = TRUE)
dat = read.csv("../data/shots-data.csv", header = TRUE)
dat$made = ifelse(dat$shot_made_flag == "Shot_yes", 1, 0)
dat$taken = ifelse(dat$shot_made_flag == "Shot_yes", 1, 1)
rawpt2 = filter(dat, dat$shot_type == "2PT Field Goal")
setwd("~/Desktop/UC Berkeley/Stat133/workout01")
curry_shot_chart <- ggplot(data = curry) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart:Stephen Curry (2018 season)') +
theme_minimal()
court_file = "images/nba-court.jpg"
court_image = rasterGrob(readJPEG(court_file), width = unit(1, "npc"), height = unit(1, "npc"))
curry_shot_chart <- ggplot(data = curry) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart:Stephen Curry (2018 season)') +
theme_minimal()
court_image = rasterGrob(readJPEG(court_file), width = unit(1, "npc"), height = unit(1, "npc"))
library(grid)
library(jpeg)
court_file = "images/nba-court.jpg"
court_image = rasterGrob(readJPEG(court_file), width = unit(1, "npc"), height = unit(1, "npc"))
curry_shot_chart <- ggplot(data = curry) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart:Stephen Curry (2018 season)') +
theme_minimal()
klay_shot_chart <- ggplot(data = klay) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Klay Thompson (2018 season)') +
theme_minimal()
graymand_shot_chart <- ggplot(data = graymand) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Graymand Green (2018 season)') +
theme_minimal()
iguodala_shot_chart <- ggplot(data = iguodala) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Andre Iguodala (2018 season)') +
theme_minimal()
kevin_shot_chart <- ggplot(data = kevin) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Kevin Durant (2018 season)') +
theme_minimal()
shots_data_chart = ggplot(data = shots_data)+
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: GSW(2018 season)') +
facet_wrap(~ Name, ncol = 2)
ggsave("gsw-shots_chart.png", width = 8, height = 7, units = "in")
pdf("gsw-shot-charts.pdf", width = (8*2.54), height = (7*2.54))
plot(shots_data_chart)
dev.off()
shots_data_chart = ggplot(data = shots_data)+
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: GSW(2018 season)') +
facet_wrap(~ Name, ncol = 2)
theme_minimal()
ggplot(data = shots_data)+
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: GSW(2018 season)') +
facet_wrap(~ Name, ncol = 2)
theme_minimal()
ggsave("gsw-shots_chart.png", width = 8, height = 7, units = "in")
pdf("gsw-shot-charts.pdf", width = (8*2.54), height = (7*2.54))
plot(shots_data_chart)
dev.off()
shots_data_chart
setwd("~/Desktop/UC Berkeley/Stat133/workout01/images")
shots_data_chart = ggplot(data = shots_data)+
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: GSW(2018 season)') +
facet_wrap(~ Name, ncol = 2)
theme_minimal()
ggsave("gsw-shots_chart.png", width = 8, height = 7, units = "in")
library(jpeg)
library(grid)
pdf("gsw-shot-charts.pdf", width = (8*2.54), height = (7*2.54))
plot(shots_data_chart)
dev.off()
View(pta)
rawpt2$taken
pt2 = summarise(group_by(rawpt2,Name), "total"=sum(rawpt2$taken), "made" =sum(rawpt2$made))
rawpt2$made
sum(rawpt2$made)
group_by(rawpt2, Name)
summarise(group_by(rawpt2, Name))
pt2 = summarise(pt2_name, "total"=sum(rawpt2$taken), "made" =sum(rawpt2$made))
View(pt2)
pt2 = summarise(group_by(rawpt2,Name), "total"=sum(rawpt2$taken), "made" =sum(rawpt2$made))
pt2$perc_made = (pt2$made/pt2$total)*100
pt2 = arrange(pt2, desc(pt2$perc_made))
View(pt3)
View(pt2)
group_by(rawpt3, Name)
rawpt3 = filter(dat, shot_type == "3PT Field Goal")
head(rawpt3)
pt3 = summarise(group_by(rawpt3,Name),"total"=sum(rawpt3$taken),"made" =sum(rawpt3$made))
View(pt3)
sum(rawpt3$taken)
#pt3_name = group_by(rawpt3, Name)
pt3 = summarise(group_by(rawpt3,Name),"total"=sum(taken),"made" =sum(made))
View(pt3)
rawpt2 = filter(dat, dat$shot_type == "2PT Field Goal")
pt2_name = summarise(group_by(rawpt2, Name))
pt2 = summarise(group_by(rawpt2,Name), "total"=sum(taken), "made" =sum(made))
pt2$perc_made = (pt2$made/pt2$total)*100
pt2 = arrange(pt2, desc(pt2$perc_made))
rawpt3 = filter(dat, shot_type == "3PT Field Goal")
#pt3_name = group_by(rawpt3, Name)
pt3 = summarise(group_by(rawpt3,Name),"total"=sum(taken),"made" =sum(made))
pt3$perc_made = (pt3$made/pt3$total)*100
pt3 = arrange(pt3, desc(pt3$perc_made))
rawpt2 = filter(dat, dat$shot_type == "2PT Field Goal")
pt2 = summarise(group_by(rawpt2,Name), "total"=sum(taken), "made" =sum(made))
pt2$perc_made = (pt2$made/pt2$total)*100
pt2 = arrange(pt2, desc(pt2$perc_made))
pta = summarise(group_by(dat,Name),"total"=sum(aken),"made" =sum(made))
pta = summarise(group_by(dat,Name),"total"=sum(taken),"made" =sum(made))
pta$perc_made = (pta$made/pta$total)*100
pta = arrange(pta, desc(pta$perc_made))
View(pt2)
View(pt3)
View(pta)
print(xtable(pt2), type = "markdown", comment = FALSE)
pt2
```{r echo = FALSE}
pt3
pta
View(shots_data_chart)
View(shots_data)
install.packages("kableExtra")
library("kableExtra", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
getwd()
